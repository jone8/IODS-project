setwd("C:\\Users\\pingv\\Documents\\GitHub\\IODS-project\\data")
write.table(analysis_lrn2014, "analysis_lrn2014_teksti.txt")
write.csv(analysis_lrn2014, "analysis_lrn2014_csv.csv")
analysis_lrn2014_teksti<-read.table("analysis_lrn2014_teksti.txt")
dim(analysis_lrn2014_teksti)
str(analysis_lrn2014_csv)
dim(analysis_lrn2014_teksti)
str(analysis_lrn2014_teksti)
analysis_lrn2014_csv<- read.csv("analysis_lrn2014_csv.csv")
analysis_lrn2014_csv<- (analysis_lrn2014_csv)[2:8]
dim(analysis_lrn2014_csv)
str(analysis_lrn2014_csv)
str(analysis_lrn2014_csv)
head(analysis_lrn2014_csv)
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
# Check the dims
dim(lrn14)
# Check structure of the data
str(lrn14)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# columns related to surface learning. surf by rowMeans
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#Scale attitude
lrn14$attitude <- lrn14$Attitude / 10
# choose cols
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# create learning
learning2014 <- select(lrn14, one_of(keep_columns))
# Filter by points > 0
learning2014 <- filter(learning2014, Points > 0)
# see the stucture of the new dataset
dim(learning2014)
str(learning2014)
head(learning2014)
tail(learning2014)
library(dplyr)
lrn14 <- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt", sep="\t", header=TRUE)
dim(lrn14)
# Check structure of the data
str(lrn14)
# questions related to deep, surface and strategic learning
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D07","D14","D22","D30")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
# columns related to deep learning and create column 'deep' by averaging
deep_columns <- select(lrn14, one_of(deep_questions))
lrn14$deep <- rowMeans(deep_columns)
# columns related to surface learning. surf by rowMeans
surface_columns <- select(lrn14, one_of(surface_questions))
lrn14$surf <- rowMeans(surface_columns)
# columns related to strategic learning and create column 'stra' by averaging
strategic_columns <- select(lrn14, one_of(strategic_questions))
lrn14$stra <- rowMeans(strategic_columns)
#Scale attitude
lrn14$attitude <- lrn14$Attitude / 10
# choose cols
keep_columns <- c("gender","Age","attitude", "deep", "stra", "surf", "Points")
# create learning
learning2014 <- select(lrn14, one_of(keep_columns))
# Filter by points > 0
learning2014 <- filter(learning2014, Points > 0)
# see the stucture of the new dataset
dim(learning2014)
str(learning2014)
head(learning2014)
tail(learning2014)
pst
# see the stucture of the new dataset
pstdim<- dim(learning2014)
pststr<-str(learning2014)
psthead<-head(learning2014)
psttail<-tail(learning2014)
# Johanna, pvm, dataa
lrn2014<- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
header=T, sep="\t")
str(lrn2014)
dim(lrn2014)
#getOption("repos")
#install.packages("dplyr")
library(dplyr)
#find.package("devtools")
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns<- select(lrn2014, one_of(deep_questions))
lrn2014$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn2014, one_of(surface_questions))
lrn2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(lrn2014, one_of(strategic_questions))
lrn2014$stra <- rowMeans(strategic_columns)
lrn2014$Attitude <- lrn2014$Attitude / 10
analysis_lrn2014 <- select(lrn2014, gender, Age, Attitude, deep, stra, surf,
Points)
analysis_lrn2014<- filter (analysis_lrn2014, Points>0)
setwd("C:\\Users\\pingv\\Documents\\GitHub\\IODS-project\\data")
write.table(analysis_lrn2014, "analysis_lrn2014_teksti.txt")
write.csv(analysis_lrn2014, "analysis_lrn2014_csv.csv")
analysis_lrn2014_teksti<-read.table("analysis_lrn2014_teksti.txt")
dim(analysis_lrn2014_teksti)
str(analysis_lrn2014_teksti)
analysis_lrn2014_csv<- read.csv("analysis_lrn2014_csv.csv")
analysis_lrn2014_csv<- (analysis_lrn2014_csv)[2:8]
dim(analysis_lrn2014_csv)
str(analysis_lrn2014_csv)
head(analysis_lrn2014_csv)
#Na
#select
#keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
#learning2014testi <- lrn2014[keep_columns]
?colnames
#NA
#dplyr
#select
# cheatsheets
miedim<-dim(analysis_lrn2014_csv)
miestr<-str(analysis_lrn2014_csv)
miehead<-head(analysis_lrn2014_csv)
View(psthead)
View(miehead)
# Johanna, pvm, dataa
lrn2014<- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
header=T, sep="\t")
str(lrn2014)
dim(lrn2014)
#getOption("repos")
#install.packages("dplyr")
library(dplyr)
#find.package("devtools")
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns<- select(lrn2014, deep_questions)
lrn2014$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn2014, surface_questions)
lrn2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(lrn2014, strategic_questions)
lrn2014$stra <- rowMeans(strategic_columns)
lrn2014$Attitude <- lrn2014$Attitude / 10
analysis_lrn2014 <- select(lrn2014, gender, Age, Attitude, deep, stra, surf,
Points)
analysis_lrn2014<- filter (analysis_lrn2014, Points>0)
setwd("C:\\Users\\pingv\\Documents\\GitHub\\IODS-project\\data")
write.table(analysis_lrn2014, "analysis_lrn2014_teksti.txt")
write.csv(analysis_lrn2014, "analysis_lrn2014_csv.csv")
analysis_lrn2014_teksti<-read.table("analysis_lrn2014_teksti.txt")
dim(analysis_lrn2014_teksti)
str(analysis_lrn2014_teksti)
analysis_lrn2014_csv<- read.csv("analysis_lrn2014_csv.csv")
analysis_lrn2014_csv<- (analysis_lrn2014_csv)[2:8]
miedim<-dim(analysis_lrn2014_csv)
miestr<-str(analysis_lrn2014_csv)
miehead<-head(analysis_lrn2014_csv)
#Na
#select
#keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
#learning2014testi <- lrn2014[keep_columns]
?colnames
#NA
#dplyr
#select
# cheatsheets
View(miehead)
# Johanna, pvm, dataa
lrn2014<- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
header=T, sep="\t")
str(lrn2014)
dim(lrn2014)
#getOption("repos")
#install.packages("dplyr")
library(dplyr)
#find.package("devtools")
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns<- select(lrn2014, deep_questions)
lrn2014$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn2014, surface_questions)
lrn2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(lrn2014, strategic_questions)
lrn2014$stra <- rowMeans(strategic_columns)
lrn2014$Attitude <- lrn2014$Attitude / 10
analysis_lrn2014 <- select(lrn2014, gender, Age, Attitude, deep, stra, surf,
Points)
analysis_lrn2014<- filter (analysis_lrn2014, Points>0)
setwd("C:\\Users\\pingv\\Documents\\GitHub\\IODS-project\\data")
write.table(analysis_lrn2014, "analysis_lrn2014_teksti.txt")
write.csv(analysis_lrn2014, "analysis_lrn2014_csv.csv")
analysis_lrn2014_teksti<-read.table("analysis_lrn2014_teksti.txt")
dim(analysis_lrn2014_teksti)
str(analysis_lrn2014_teksti)
analysis_lrn2014_csv<- read.csv("analysis_lrn2014_csv.csv")
analysis_lrn2014_csv<- (analysis_lrn2014_csv)[2:8]
miedim<-dim(analysis_lrn2014_csv)
miestr<-str(analysis_lrn2014_csv)
miehead<-head(analysis_lrn2014_csv)
#Na
#select
#keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
#learning2014testi <- lrn2014[keep_columns]
?colnames
#NA
#dplyr
#select
# cheatsheets
lrn14<- read.table(analysis_lrn2014_teksti.txt)
setwd(C:/Users/pingv/Documents/GitHub/IODS-project/data)
setwd("C:/Users/pingv/Documents/GitHub/IODS-project/data")
lrn14<- read.table(analysis_lrn2014_teksti.txt)
lrn14<- read.table("analysis_lrn2014_teksti.txt"")
lrn14<- read.table("analysis_lrn2014_teksti.txt")
getwd()
setwd("C:/Users/pingv/Documents/GitHub/IODS-project/data")
lrn14<- read.table("analysis_lrn2014_teksti.txt")
getwd()
getwd()
lrn14<- read.table("analysis_lrn2014_teksti.txt")
setwd("C:/Users/pingv/Documents/GitHub/IODS-project/data")
setwd
getwd()
lrn14<- read.table("analysis_lrn2014_teksti.txt")
setwd("C:\\Users\\pingv\\Documents\\GitHub\\IODS-project\\data")
getwd()
setwd("C:/Users/pingv/Documents/GitHub/IODS-project/data")
setwd("C:/Users/pingv/Documents/GitHub/IODS-project/data")
lrn14<- read.table("analysis_lrn2014_teksti.txt")
setwd("C:/Users/pingv/Documents/GitHub/IODS-project/data")
lrn14<- read.table("analysis_lrn2014_teksti.txt")
View(lrn14)
getwd()
str(lrn14)
dim(lrn14)
```{r dims, echo=FALSE}
dim(lrn14)
str(lrn14)
```{r data, echo=FALSE, include=FALSE}
setwd("C:/Users/pingv/Documents/GitHub/IODS-project/data")
lrn14<- read.table("analysis_lrn2014_teksti.txt")
str(lrn14)
dim(lrn14)
```{r dims, echo=FALSE}
str(lrn14)
dim(lrn14)
str(lrn14)
lrn14<- read.table("analysis_lrn2014_teksti.txt")
lrn14<- read.table("data/analysis_lrn2014_teksti.txt")
summary(lrn14)
```{r warning=FALSE}
library(ggplot2)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(GGally)
ggpairs(l2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
install.packages("GGally")
ggpairs(l2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
ggpairs(l2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
summary(lm(points~attitude,data=l2014))
summary(lm(points~attitude,data=lrn14))
library(GGally)
summary(lm(points~attitude,data=lrn14))
ggpairs(l2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
ggpairs(lrn14, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
qplot(attitude, points, data = learning2014) + geom_smooth(method = "lm")
qplot(attitude, points, data = lrn14) + geom_smooth(method = "lm")
qplot(Attitude, Points, data = lrn14) + geom_smooth(method = "lm")
my_model <- lm(points ~ 1, data = learning2014)
my_model <- lm(points ~ 1, data = lrn14)
my_model <- lm(Points ~ 1, data = lrn14)
View(my_model)
my_model <- lm(Points ~ age, data = lrn14)
my_model <- lm(Points ~ Age, data = lrn14)
View(my_model)
summary(my_model)
my_model <- lm(Points ~ Age+ attitude+stra, data = lrn14)
my_model <- lm(Points ~ Age+ Attitude+stra, data = lrn14)
View(my_model)
summary(my_model)
ggpairs(l2014, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
ggpairs(lrn14, mapping = aes(col = gender, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
plot(lm(points~attitude, data=l2014), which = c(1,2,5), par(mfrow=c(2,2)) )
plot(lm(points~attitude, data=lrn14), which = c(1,2,5), par(mfrow=c(2,2)) )
plot(lm(Points~Attitude, data=lrn14), which = c(1,2,5), par(mfrow=c(2,2)) )
summary(lm(points~attitude,data=lrn14))
summary(lm(Points~Attitude,data=lrn14))
summary(my_model)
?plot.lm
plot(lm(points~attitude, data=lrn14), which = c(1,2,5), par(mfrow=c(2,2)) )
plot(lm(Points~Attitude, data=lrn14), which = c(1,2,5), par(mfrow=c(2,2)) )
lrn2014<- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
header=T)
?read.table()
keep<- c("gender", "Age", "Attitude")
lrn2014[keep]
#install.packages(c('survey'))
#install.packages("http://cnsgenomics.com/software/gsmr/static/gsmr_1.0.6.tar.gz",repos=NULL,type="source")
library("gsmr")
data("gsmr")
head(gsmr_data)
write.table(gsmr_data[,c(1,2)], "gsmr_example_snps.allele", col.names=F, row.names=F, quote=F)
#setwd("C:/Users/pingv/Downloads/test_data.zip")
#install.packages("http://cnsgenomics.com/software/gcta/")
#install.packages("GenABEL")
#Ei pysty lataamaan, tarvii jotta voi käyttää gcta64
getwd()
setwd("C:/Users/pingv/Downloads")
#source("https://bioconductor.org/biocLite.R")
#biocLite("rtracklayer")
library(rtracklayer)
testi<-import("gsmr_example.bed", format= "bed")
read.csv("gsmr_example.bed")
snp_coeff_id = scan("gsmr_example.xmat.gz", what="", nlines=1)
snp_coeff = read.table("gsmr_example.xmat.gz", header=F, skip=2)
snp_id = Reduce(intersect, list(gsmr_data$SNP, snp_coeff_id))
gsmr_data = gsmr_data[match(snp_id, gsmr_data$SNP),]
snp_order = match(snp_id, snp_coeff_id)
snp_coeff_id = snp_coeff_id[snp_order]
snp_coeff = snp_coeff[, snp_order]
ldrho = cor(snp_coeff)
colnames(ldrho) = rownames(ldrho) = snp_coeff_id
dim(ldrho)
ldrho[1:5,1:5]
# STD kohta!
bzx = gsmr_data$bzx
bzx_se = gsmr_data$bzx_se
bzx_pval = gsmr_data$bzx_pval
bzy = gsmr_data$bzy
bzy_se = gsmr_data$bzy_se
bzy_pval = gsmr_data$bzy_pval
n_ref = 7703
gwas_thresh = 5e-8
heidi_outlier_thresh = 0.01
nsnps_thresh = 10
heidi_outlier_flag = T
ld_r2_thresh = 0.1
ld_fdr_thresh = 0.05
gsmr_results = gsmr(bzx, bzx_se, bzx_pval, bzy, bzy_se, ldrho, snp_coeff_id, n_ref, heidi_outlier_flag, gwas_thresh, heidi_outlier_thresh, nsnps_thresh, ld_r2_thresh, ld_fdr_thresh)
cat("The estimated effect of the exposure on outcome: ",gsmr_results$bxy)
cat("Standard error of bxy: ",gsmr_results$bxy_se)
cat("P-value for bxy: ", gsmr_results$bxy_pval)
cat("Indexes of the SNPs used in the GSMR analysis: ", gsmr_results$used_index[1:5], "...")
cat("Number of SNPs with missing estimates in the summary data: ", length(gsmr_results$na_snps))
cat("Number of non-significant SNPs: ", length(gsmr_results$weak_snps))
cat("Number of SNPs in high LD ( LD rsq >", ld_r2_thresh, "): ", length(gsmr_results$linkage_snps))
cat("Number of pleiotropic outliers: ", length(gsmr_results$pleio_snps))
##---
#sitaatit jos käyttää!!
#install.packages("devtools")
library (devtools)
#install_github("MRCIEU/TwoSampleMR")
library(TwoSampleMR)
#devtools::install_github("MRCIEU/MRInstruments")
library(MRInstruments)
library(plyr)
## jotain ohjeita https://libraries.io/github/MRCIEU/TwoSampleMR
data(metab_qtls) #to load metabolomic QTLs
exposure_dat <- format_metab_qtls(metab_qtls)
data(gwas_catalog) # NHGRI/EBI GWAS catalog
#exposure_dat <- format_gwas_catalog(metab_qtls)
# dokumentoinnin mukaan:
ao <- available_outcomes()
#install.packages("plyr")
library(plyr)
#bmi_file <- system.file("data/bmi.txt", package="TwoSampleMR")
#bmi_exp_dat <- read_exposure_data(bmi_file)
#head(bmi_exp_dat)
data(gwas_catalog)
head(gwas_catalog)
#58:
mos_gwas <- subset(gwas_catalog, grepl("Jones AV", Author) & Phenotype == "Mosquito bite size")
mos_exp_dat<- format_data(mos_gwas)
head(ao)
# nää vissiin already LD clumped
schooling_exp_dat <- extract_instruments(outcomes=1001)
# eteenpäin:
#https://mrcieu.github.io/TwoSampleMR/
# Clumping
# vissiin virhe koska jo clumpattu.
#schooling_exp_dat <- clump_data(schooling_exp_dat)
mos<- clump_data(mos_exp_dat)
# Vissiin jotain ongelmia githubissa...
bmi_gwas <- subset(gwas_catalog, grepl("Speliotes EK", Author) & units == "kg/m2 increase")
bmi_exp_dat <- format_data(bmi_gwas)
bmi_exp_dat <- clump_data(bmi_exp_dat)
ao[grepl("heart disease", ao$trait), ]
chd_out_dat <- extract_outcome_data(
snps = bmi_exp_dat$SNP,
outcomes = 7
)
dat <- harmonise_data(
exposure_dat = bmi_exp_dat,
outcome_dat = chd_out_dat
)
tulos <- mr(dat)
tulos
add_rownames()
mos_gwas <- select(gwas_catalog, grepl("Jones AV", Author) & Phenotype == "Mosquito bite size")
mos_gwas <- subset(gwas_catalog, grepl("Jones AV", Author) & Phenotype == "Mosquito bite size")
?subset
?subset()
aa<- subset(analysis_lrn2014, Points>0)
# Johanna, pvm, dataa
lrn2014<- read.table("http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt",
header=T)
?read.table()
str(lrn2014)
dim(lrn2014)
#getOption("repos")
#install.packages("dplyr")
library(dplyr)
#find.package("devtools")
deep_questions <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30","D06",  "D15", "D23", "D31")
surface_questions <- c("SU02","SU10","SU18","SU26", "SU05","SU13","SU21","SU29","SU08","SU16","SU24","SU32")
strategic_questions <- c("ST01","ST09","ST17","ST25","ST04","ST12","ST20","ST28")
deep_columns<- select(lrn2014, deep_questions)
lrn2014$deep <- rowMeans(deep_columns)
surface_columns <- select(lrn2014, surface_questions)
lrn2014$surf <- rowMeans(surface_columns)
strategic_columns <- select(lrn2014, strategic_questions)
lrn2014$stra <- rowMeans(strategic_columns)
keep<- c("gender", "Age", "Attitude")
lrn2014[keep]
lrn2014$Attitude <- lrn2014$Attitude / 10
analysis_lrn2014 <- select(lrn2014, gender, Age, Attitude, deep, stra, surf,
Points)
analysis_lrn2014<- filter (analysis_lrn2014, Points>0)
aa<- subset(analysis_lrn2014, Points>0)
setwd("C:\\Users\\pingv\\Documents\\GitHub\\IODS-project\\data")
write.table(analysis_lrn2014, "analysis_lrn2014_teksti.txt")
write.csv(analysis_lrn2014, "analysis_lrn2014_csv.csv")
analysis_lrn2014_teksti<-read.table("analysis_lrn2014_teksti.txt")
dim(analysis_lrn2014_teksti)
str(analysis_lrn2014_teksti)
analysis_lrn2014_csv<- read.csv("analysis_lrn2014_csv.csv")
analysis_lrn2014_csv<- (analysis_lrn2014_csv)[2:8]
miedim<-dim(analysis_lrn2014_csv)
miestr<-str(analysis_lrn2014_csv)
miehead<-head(analysis_lrn2014_csv)
#Na
#select
#keep_columns <- c("gender","Age","Attitude", "deep", "stra", "surf", "Points")
#learning2014testi <- lrn2014[keep_columns]
?colnames
install.packages("ggplot2")
install.packages("GGally")
?plot.lm
#NA
#dplyr
#select
# cheatsheets
install.packages("GGally")
View(aa)
analysis_lrn20142 <- select(lrn2014, gender, Age, Attitude, deep, stra, surf,
Points)
analysis_lrn2014 <- select(lrn2014, gender, Age, Attitude, deep, stra, surf,
Points)
library(dplyr)
analysis_lrn20142 <- select(lrn2014, gender, Age, Attitude, deep, stra, surf,
Points)
ab<- subset(analysis_lrn20142, Points>0)
View(ab)
ab<- subset(analysis_lrn20142, Points>10)
View(ab)
ab<- subset(analysis_lrn20142, Points>50)
ab<- subset(analysis_lrn20142, Points>40)
ab<- subset(analysis_lrn20142, Points>30)
View(ab)
?add_rownames()
lm(Points~ Attitude, data=lrn14)
summary(hei)
hei<-lm(Points~ Attitude, data=lrn14)
summary(hei)
ggplot(summary(hei))
gplot(summary(hei))
qplot(summary(hei))
plot(hei)
plot(Points, attitude)
plot(lrn14$Points, lrn14$attitude)
plot( lrn14$attitude, lrn14$Points)
plot(hei)
set.seed(777)
bst <- as.data.frame(scale(Boston))
library(Boston)
library(MASS)
bst <- as.data.frame(scale(Boston))
km_5 <- kmeans(bst, centers = 5)
lda.fit2 <- lda(km_5$cluster ~ ., data = bst)
# target classes as numeric
class <- as.numeric(km_5$cluster)
# plot the lda results
plot(lda.fit2, dimen = 2, col = class , pch = class)
lda.arrows(lda.fit2, myscale = 1)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit2, dimen = 2, col = class , pch = class)
lda.arrows(lda.fit2, myscale = 1)
View(bst)
